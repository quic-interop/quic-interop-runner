name: interop
on:
  push:
    branches:
      - '**'
  schedule:
   # Every 8h, at 15 minutes past the hour
   # This makes sure that the cleanup cron job can run first.
  - cron: "15 */8 * * *"

# Cache key for caching the Wireshark build.
# To trigger a rebuild of Wireshark increment this value.
# The rebuild will then build the current master of Wireshark and save it under the new key.
env:
  WIRESHARK_CACHEKEY: 1736944975

jobs:
  wireshark:
    runs-on: ubuntu-latest
    steps:
      - name: Restore from cache
        id: restore-cache
        uses: actions/cache@v4
        env:
          VERSION: ${{ env.WIRESHARK_CACHEKEY }}
        with:
          key: wireshark-${{ env.VERSION }}
          path: tshark.tar.gz
      - name: Show tshark version information
        if: steps.restore-cache.outputs.cache-hit == 'true'
        run: |
          tar xfz tshark.tar.gz
          ./tshark -v
      - uses: actions/checkout@v4
        if: steps.restore-cache.outputs.cache-hit != 'true'
        with:
          repository: the-tcpdump-group/libpcap
      - name: Build libpcap
        if: steps.restore-cache.outputs.cache-hit != 'true'
        run: |
          ./autogen.sh
          ./configure --disable-dbus --disable-rdma
          sudo make install
      - uses: actions/checkout@v4
        if: steps.restore-cache.outputs.cache-hit != 'true'
        with:
          repository: wireshark/wireshark
      - name: Install dependencies
        if: steps.restore-cache.outputs.cache-hit != 'true'
        run: sudo apt-get install -y cmake libglib2.0-dev libc-ares-dev libgcrypt20-dev flex bison byacc ninja-build libpcre3-dev
      - name: Build Wireshark
        if: steps.restore-cache.outputs.cache-hit != 'true'
        run: |
          cmake -GNinja \
            -DBUILD_wireshark=0 \
            -DBUILD_qtshark=0 \
            -DBUILD_editcap=1 \
            -DBUILD_capinfos=0 \
            -DBUILD_text2pcap=0 \
            -DBUILD_rawshark=0 \
            -DBUILD_sdjournal=0 \
            -DBUILD_sshdump=0 \
            -DBUILD_ciscodump=0 \
            -DBUILD_sharkd=0 \
            -DENABLE_STATIC=1 \
            -DENABLE_PLUGINS=0 \
            -DENABLE_LIBXML2=0 \
            -DENABLE_BROTLI=0 \
            -DUSE_STATIC=1 \
            -DENABLE_GNUTLS=1 \
            --debug-find \
            .
          ninja
      - run: run/tshark -v
        if: steps.restore-cache.outputs.cache-hit != 'true'
      - name: Compress
        if: steps.restore-cache.outputs.cache-hit != 'true'
        run: tar -czvf tshark.tar.gz -C run/ tshark
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: wireshark
          path: tshark.tar.gz
